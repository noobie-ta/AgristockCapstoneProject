rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- POSTS ---
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null &&
        resource.data.userId == request.auth.uid;
      // Allow any authenticated user to update favoriteCount and bidding fields
      allow update: if request.auth != null &&
        request.writeFields.hasOnly(['favoriteCount', 'highestBid', 'highestBidFormatted', 'totalBidders']);
    }

    // --- USERS ---
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      match /favorites/{favoriteId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- FAVORITES ---
    match /favorites/{favoriteId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
    }

    // --- NOTIFICATIONS ---
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
    }

    // --- CHATS ---
    match /chats/{chatId} {
      // Allow any authenticated user to read chats (needed for whereArrayContains queries)
      allow read: if request.auth != null;
      // Allow participants to update chats
      allow update: if request.auth != null &&
        request.auth.uid in resource.data.participants;
      // Allow participants to delete chats
      allow delete: if request.auth != null &&
        request.auth.uid in resource.data.participants;
      // Allow creation if user is in participants
      allow create: if request.auth != null &&
        request.resource.data.participants.size() == 2 &&
        request.auth.uid in request.resource.data.participants;
      // Allow list operations for queries (including whereArrayContains)
      allow list: if request.auth != null;
    }

    // --- MESSAGES (Top-level collection as used in your app) ---
    match /messages/{messageId} {
      // Allow any authenticated user to read/write messages
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      // Allow list operations for queries
      allow list: if request.auth != null;
    }

    // --- BIDS ---
    match /bids/{bidId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      allow list: if request.auth != null;
    }

    // --- REPORTS ---
    match /reports/{reportId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      allow list: if request.auth != null;
    }

    // --- BLOCKS ---
    match /blocks/{blockId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      allow list: if request.auth != null;
    }

    // --- MUTED CHATS ---
    match /mutedChats/{muteId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
      allow list: if request.auth != null;
    }

    // --- VERIFICATION REQUESTS ---
    match /verification_requests/{requestId} {
      // Allow users to read their own verification requests
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         // Allow admin users to read all verification requests
         request.auth.token.admin == true);
      // Allow users to create their own verification requests
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      // Allow users to update their own verification requests (for status updates)
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Allow admin users to update any verification request
      allow update: if request.auth != null && 
        request.auth.token.admin == true;
      // Allow list operations for users to see their own requests
      allow list: if request.auth != null;
    }
  }
}